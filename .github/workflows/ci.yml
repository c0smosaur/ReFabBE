name: CI Pipeline

permissions:
  checks: write
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build and Run Tests
        run: |
          ./gradlew clean ciTest --info
          echo "=== Project Root ==="
          ls -la
          echo "=== Build Directory ==="
          ls -la build/
          echo "=== Test Results Directory ==="
          ls -la build/test-results/ || echo "No test-results directory"
          echo "=== Test Directory ==="
          ls -la build/test-results/test/ || echo "No test directory"
          find . -name "TEST-*.xml" || echo "No test XML files found"
        continue-on-error: true

      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar \
            -Dsonar.scm.provider=git \
            -Dsonar.projectKey=teamCleanie_ReFabBE \
            -Dsonar.organization=teamcleanie \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=${{ github.head_ref }} \
            -Dsonar.gradle.skipCompile=true

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            build/test-results/test/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JUnit Tests
          path: build/test-results/test/TEST-*.xml
          reporter: java-junit
          fail-on-error: false